name: ipywidgets-bokeh-CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      max-parallel: 3
      matrix:
        os: [ubuntu-latest, macos-13, windows-latest]  # macos-latest is osx-arm64, which the CI dows not like
        node-version: [18.x]

    defaults:
      run:
        shell: bash -el {0}

    steps:
      - name: Set up conda and install base
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          activate-environment: test

      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: Install node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Upgrade npm
        run: |
          npm install --location=global npm

      - name: Install JavaScript dependencies
        working-directory: ./ipywidgets_bokeh
        run: |
          npm ci --no-progress

      - name: Build ipywidgets-bokeh JavaScript
        working-directory: ./ipywidgets_bokeh
        run: |
          npm run build

      - name: Run JavaScript tests
        if: success() || failure()
        working-directory: ./ipywidgets_bokeh
        run: |
          npm run test

      - name: Lint the JavaScript codebase
        if: success() || failure()
        working-directory: ./ipywidgets_bokeh
        run: |
          npm run lint

      - name: Install dev Python dependencies & Playwright browsers
        if: success() || failure()
        run: |
          conda install --channel conda-forge -y pip python
          conda info
          python -m pip install --editable .[dev]
          python -m playwright install --with-deps

      - name: Run Playwright & Python tests
        if: matrix.os != 'windows-latest'
        run: |
          pytest

      - name: Check repository status
        if: success() || failure()
        run: |
          OUTPUT=$(git status --short .)
          if [[ ! -z "$OUTPUT" ]]; then echo $OUTPUT; exit 1; fi
